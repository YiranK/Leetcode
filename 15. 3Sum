class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>> ans;
        if (nums.empty()) return ans;
        for (int i = 0; i < nums.size()-2; i++) {
            if (nums[i] > 0) break;
            int front = i+1;
            int back = nums.size()-1;
            
            while (front < back) {
                int sum = nums[i]+nums[front]+nums[back];
                if (sum < 0) {
                    front++;
                } else if (sum > 0) {
                    back--;
                } else {
                    vector<int> triplet(3, 0);
                    triplet[0] = nums[i];
                    triplet[1] = nums[front];
                    triplet[2] = nums[back];
                    ans.push_back(triplet);
                    
                    while (front<back && nums[front] == triplet[1]) front++;
                    while (front<back && nums[back] ==triplet[2]) back--;
                }
            }
            
            while(i < nums.size()-2 && nums[i+1] == nums[i]) i++;
        }
      
        return ans;
    }
};
